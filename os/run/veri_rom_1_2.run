#
# \brief   Test HDL-enviroment functionalities
# \author  Martin Stein
# \date    2012-05-29
#

# Build program images
build "core init vinit test/veri_rom_1_2 server/ram_fs"

# Create directory where the boot files are written to
create_boot_directory

# Create XML configuration for init
install_config {
<config verbose="no">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<service name="File_system"><child name="ram_fs" /></service>
		<any-service><parent/></any-service>
	</default-route>

	<start name="ram_fs">
		<resource name="RAM" quantum="5M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<content>
				<rom name="monitor.rom" />
				<dir name="usr">
					<dir name="share">
						<dir name="zoneinfo">
							<rom name="UTC" />
							<rom name="posixrules" />
						</dir>
					</dir>
				</dir>
			</content>
			<policy label="vinit -> monitor" root="/" />
		</config>
	</start>

	<start name="vinit">
		<resource name="RAM" quantum="40M"/>
		<config verbose="no">
			<parent-provides>
				<service name="ROM"/>
				<service name="RAM"/>
				<service name="CAP"/>
				<service name="PD"/>
				<service name="RM"/>
				<service name="CPU"/>
				<service name="IO_MEM"/>
				<service name="IRQ"/>
				<service name="LOG"/>
				<service name="SIGNAL"/>
				<service name="File_system"/>
			</parent-provides>
			<default-route>
				<service name="File_system"><parent/></service>
				<any-service><parent/></any-service>
			</default-route>

			<emulator name="monitor">
				<binary name="monitor"/>
				<resource name="RAM" quantum="5M"/>
			</emulator>

			<emulated by="monitor">
				<resource name="IO_MEM" base="0x71000000" size="0x1000" local="0x0"/>
			</emulated>

			<start name="test">
				<binary name="test-veri_rom_1_2"/>
				<resource name="RAM" quantum="5M"/>
			</start>

		</config>
	</start>

</config>
}

# Build boot files from the source binaries
exec cp [genode_dir]/os/src/test/veri_rom_1_2/monitor/monitor.rom bin/
exec cp /usr/share/zoneinfo/UTC bin/
exec cp /usr/share/zoneinfo/posixrules bin/
build_boot_image "core init vinit ram_fs test-veri_rom_1_2 monitor ld.lib.so libc.lib.so libm.lib.so libc_log.lib.so libc_fs.lib.so monitor.rom UTC posixrules stdcxx.lib.so"

# Execute test in Qemu
run_genode_until forever

